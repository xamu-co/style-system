/** @format */
/*
	A personal collection of usefull mixins
	I created the flexbox one and consider it the most useful
	Some of them are not that necesary cuz the were mean for prefixing, but autoprefixer solves that already
*/

// viewport extend
@mixin extend-viewports($desktop: false) {
	@content;
	@if $responsive {
		@each $name, $viewport in $viewports {
			/// mobile first
			@media (min-width: $viewport + 1) {
				&\:#{$name} {
					@content;
				}
			}
			/// desktop first
			@if $desktop {
				@media (max-width: $viewport) {
					&\:#{$name}-inv {
						@content;
					}
				}
			}
		}
	}
}

// flexbox en una sola linea
// ej: row, nowrap, space-around, strecth
@mixin flexbox($t, $m, $j, $a, $d: flex) {
	display: $d;
	flex-flow: $t $m;
	justify-content: $j;
	align-items: $a;
}

/// Mixin printing a linear-gradient
/// as well as a plain color fallback
/// and the `-webkit-` prefixed declaration
/// @access public
/// @param {String | List | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient
@mixin linear-gradient($direction, $color-stops...) {
	@if is-direction($direction) == false {
		$color-stops: ($direction, $color-stops);
		$direction: 180deg;
	}

	// background-color: nth(nth($color-stops, 1), 1);
	background-image: -webkit-linear-gradient(
		legacy-direction($direction),
		$color-stops
	);
	background-image: linear-gradient($direction, $color-stops);
}

//https://gist.github.com/nickspiel/10331551
@mixin blur($amount, $unit: px) {
	filter: url("data:image/svg+xml;utf8,<svg%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='#{$amount}'/></filter></svg>#blur");
	-webkit-filter: blur($amount + $unit);
	filter: blur($amount + $unit);
}
