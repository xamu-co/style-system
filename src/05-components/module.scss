/** @format */

/// tag associated
@import "inputText";
@import "inputCheckbox";
@import "icon";
@import "inputSelect";
@import "hr";
@import "navList";
@import "navListToggle";

/// non tag associated
@import "text";
@import "emoji";
@import "logo";
@import "avatar";
@import "avatarAureo";
@import "pickList";
@import "back";
@import "galleryItem";
@import "box";
@import "holder";
@import "navigationX";
@import "navigationY";
@import "view";
@import "action"; //links
@import "actionNav"; //links
@import "button";
@import "buttonToggle";

/// There are some components that share common styles

/// navList-group & navListToggle-group shared styles
///
/// @group SharedStyles
ul,
ol {
	&.x-navList-group,
	&.x-navListToggle-group {
		overflow: hidden;

		/// flow direction
		///
		/// @group Modifiers
		&.m__flow-row {
			@include flexbox(row, nowrap, flex-start, center);
			> li:not(:last-child) {
				margin-right: 1rem;
			}
		}
		/// default flow
		&:not([class*="m__flow"]),
		&.m__flow-column {
			@include flexbox(column, nowrap, flex-start, flex-start);
			> li:not(:last-child) {
				margin-bottom: 0.5rem;
			}
		}

		> li {
			.x-action,
			.x-actionNav {
				white-space: normal;
				line-height: $lineHeightMedium;
			}
		}
	}
}

/// button, buttonY & select shared styles
///
/// @group SharedStyles
.x-button,
.x-buttonY,
select.x-inputSelect {
	white-space: nowrap;
	text-align: center;
	border-color: transparent;
	&:disabled,
	&[disabled] {
		// opacity: 0.3;
		pointer-events: none;
	}

	/// button, select theme
	/// first value is the bgColor
	/// second value is the textColor
	///
	/// @group Unions
	&.u__theme-light {
		&-secondary {
			color: color(secondary);
			&:hover,
			&:focus {
				border-color: color(secondary, 0.3);
				color: color(secondary, 0.7);
			}
		}
		&-dark {
			color: color(dark, 0.7);
			&:hover,
			&:focus {
				border-color: color(dark, 0.3);
				color: color(dark, 0.3);
			}
		}
		&-primaryAlt {
			color: color(primaryAlt);
			&:hover,
			&:focus {
				border-color: color(primaryAlt, 0.3);
				color: color(primaryAlt, 0.7);
			}
		}
		&-primary {
			color: color(primary);
			background-color: color(light);
			&:hover,
			&:focus {
				border-color: color(primary, 0.3);
				color: color(primary, 0.7);
			}
			&:not(.is__active) {
				text-shadow: 0 0 1px color(dark, 0.2);
			}
		}
		&-secondary,
		&-dark,
		&-primaryAlt {
			background-color: color(light);
			&.is__routeExact,
			&.is__active {
				border-color: color(light);
				color: color(light);
			}
			&:disabled,
			&[disabled] {
				border-color: color(light, 0.3);
				color: color(light, 0.3);
			}
		}
	}
	&.u__theme-primary-light {
		background-color: color(primary);
		color: color(light);
		&:hover,
		&:focus {
			border-color: color(light, 0.3);
			color: color(light, 0.7);
		}
		&.is__routeExact,
		&.is__active {
			border-color: color(primary);
			color: color(primary);
		}
		&:disabled,
		&[disabled] {
			border-color: color(primary, 0.3);
			color: color(primary, 0.3);
		}
	}
	&.u__theme-primaryAlt-primary {
		background-color: color(primaryAlt);
		color: color(primary);
		&:hover,
		&:focus {
			border-color: color(primary, 0.3);
			color: color(primary, 0.7);
		}
		&.is__routeExact,
		&.is__active {
			border-color: color(primaryAlt);
			color: color(primaryAlt);
		}
		&:disabled,
		&[disabled] {
			border-color: color(primaryAlt, 0.3);
			color: color(primaryAlt, 0.3);
		}
	}
	/// default theme
	&:not([class*="u__theme"]),
	&.u__theme-secondary-light {
		background-color: color(secondary);
		color: color(light);
		&:hover,
		&:focus {
			border-color: color(light, 0.3);
			color: color(light, 0.7);
		}
		&.is__routeExact,
		&.is__active {
			border-color: color(secondary);
			color: color(secondary);
		}
		&:disabled,
		&[disabled] {
			border-color: color(secondary, 0.3);
			color: color(secondary, 0.3);
		}
	}

	/// OVERRIDE: dejar en el final
	&.is__routeExact,
	&.is__active,
	&:disabled,
	&[disabled] {
		background-color: transparent;
	}
}

/// button & buttonToggle shared styles
///
/// @group SharedStyles
.x-button,
.x-buttonToggle {
	/// this is the default value
	&.m__size-normal,
	&:not([class*="m__size"]) {
		padding: 0 1rem;
		&.m__round {
			width: 2.4rem;
		}
	}

	/// round button
	///
	/// @group Modifiers
	&.m__round {
		padding: 0;
	}
}

/// text, select, button & buttonToggle shared styles
///
/// @group SharedStyles
.x-button,
.x-buttonToggle,
.x-inputText,
select.x-inputSelect {
	border-style: solid;
	text-shadow: none;
	@include box-sizing(border-box);
	&:not([class*="xm__textSize"]) {
		font-size: 1rem;
	}
	/// this is the default value
	&.m__size,
	&.m__size-normal,
	&:not([class*="m__size"]) {
		height: 2.4rem;
		border-radius: 1rem;
		border-width: 2px;
	}
}

/// button, buttonToggle, link & linkNav shared styles
///
/// @group SharedStyles
.x-button,
.x-buttonToggle,
.x-action,
.x-actionNav {
	:not(.x-icon):first-child ~ i.x-icon {
		margin-left: 0.5em;
	}
	i.x-icon ~ :not(.x-icon) {
		margin-left: 0.5em;
	}
}

/// button, buttonToggle, link, linkNav & select shared styles
///
/// @group SharedStyles
.x-button,
.x-buttonToggle,
.x-action,
.x-actionNav,
select.x-inputSelect {
	&,
	> :not(.x-icon) {
		&::first-letter {
			text-transform: capitalize;
		}
	}
	&:disabled,
	&[disabled] {
		opacity: 0.3;
		pointer-events: none;
	}
}

/// LOOPS

@each $name, $size in $fontSizes {
	/// button & buttonToggle shared styles
	///
	/// @group SharedStyles
	.x-button,
	.x-buttonToggle {
		&.m__size-#{$name} {
			padding: 0 $size;
			&.m__round {
				width: $size * 2.6;
			}
		}
	}
	/// text, select, button & buttonToggle shared styles
	///
	/// @group SharedStyles
	.x-button,
	.x-buttonToggle,
	.x-inputText,
	select.x-inputSelect {
		&.m__size-#{$name} {
			height: $size * 2.6;
			border-radius: $size;
			border-width: calc(2px + (#{$size} / 18));
		}
	}
}
