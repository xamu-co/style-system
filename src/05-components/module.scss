/** @format */
/// There are some components that share common styles

/// navList-group & navListToggle-group shared styles
///
/// @group SharedStyles
ul,
ol {
	&[class*="x-nList"][class*="-group"] {
		overflow: hidden;

		/// flow direction
		///
		/// @group Modifiers
		&.m__flow-row {
			@include flexbox(row, nowrap, flex-start, center);
			> li:not(:last-child) {
				margin-right: 1rem;
			}
		}
		/// default flow
		&:not([class*="__fl"]),
		&.m__flow-column {
			/// Flow
			@include flexbox(column, nowrap, flex-start, stretch);
			> li:not(:last-child) {
				margin-bottom: 0.5rem;
			}
		}

		> li {
			.x-link,
			.x-btnLink {
				white-space: normal;
				line-height: $lineHeightMedium;
			}
		}
	}
}

/// avatar & avatarAureo shared styles
///
/// @group SharedStyles
[class*="x-avatar"] {
	display: block;
	overflow: hidden;
	flex: 0 0 auto;
	border-radius: var(--avr, 1rem);
	transition: all 0.1s ease-out;
	&:not([class*="__bgC"]) {
		/// Color
		background-color: color(light);
	}

	/// avatar size
	///
	/// @group Modifiers
	&.m__size-lg {
		--avr: 1.667rem;
		&.m__bdr,
		&.m__border {
			--avb: 4px;
		}
	}
	&.m__size-md {
		--avr: 1.333rem;
		&.m__bdr,
		&.m__border {
			--avb: 3px;
		}
	}

	/// avatar border
	///
	/// @group Modifiers
	&.m__bdr,
	&.m__border {
		border-style: solid;
		box-sizing: border-box;
		border-width: var(--avb, 2px);
		&:not([class*="__bdrC"]) {
			/// Color
			border-color: color(light);
		}
	}

	img {
		object-fit: cover;
		object-position: 50% 50%;
	}
}
a[class*="x-avatar"] {
	&:hover,
	&.is__active,
	&.is__routeExact {
		// box-shadow: 1px 1px 3px color(dark, 0.2);
		img {
			opacity: 0.7;
		}
	}
	/// avatar border
	///
	/// @group Modifiers
	&.m__bdr,
	&.m__border {
		&:not(:hover),
		&:not(.is__active),
		&:not(.is__routeExact) {
			border-color: transparent;
		}
	}
}

/// icon & svgIcon
///
/// @group SharedStyles
.x-svg,
i.x-icon {
	width: auto;
	height: var(--ics, 1rem);
	font-size: var(--ics, 1rem);

	/// icon margin
	///
	/// @group Modifiers
	&.m__m,
	&.m__margin {
		&:not(:first-child) {
			margin-left: 0.4em;
		}
		&:not(:last-child) {
			margin-right: 0.4em;
		}
	}

	/// icon size
	///
	/// @group Modifiers
	@for $i from 2 through 10 {
		&.m__size-#{$i*5} {
			--ics: #{$i/3}rem;
		}
	}
}

/// button defaults & round modifier
///
/// @group SharedStyles
[class*="x-btn"]:not(.x-btnY):not(.x-btnLink) {
	/// this is the default value
	/// Size
	padding: var(--btp, 0 0.8rem);

	/// round button
	///
	/// @group Modifiers
	&.m__round {
		--btp: 0;
		width: var(--bts, 2.4rem);
		i.x-icon {
			margin: 0 !important;
			+ span {
				display: none;
			}
		}
	}
}

/// icon behavior
///
/// @group SharedStyles
[class*="x-btn"]:not(.x-btnY):not(.x-btnLink),
.x-link {
	:not(.x-icon):first-child ~ i.x-icon {
		margin-left: 0.4em;
	}
	i.x-icon ~ :not(.x-icon) {
		margin-left: 0.4em;
	}
}

/// content alignment
///
/// @group SharedStyles
[class*="x-btn"] {
	flex: 0 0 auto;
	text-align: center;
	@include flexbox(row, nowrap, center, center, inline-flex);
}

/// buttons & select themes
///
/// @group SharedStyles
[class*="x-btn"]:not(.x-btnToggle),
select.x-inSelect {
	/// first value is the bgColor
	/// second value is the textColor
	///
	/// @group Unions
	&.u__tm-light {
		&-secondary {
			--cl: #{color(secondary)};
			&:not(.is__routeExact) {
				&:hover,
				&:focus {
					--cl: #{color(secondary, 0.7)};
					--bd: #{color(secondary, 0.3)};
				}
			}
		}
		&-dark {
			--cl: #{color(dark, 0.7)};
			&:not(.is__routeExact) {
				&:hover,
				&:focus {
					--cl: #{color(dark, 0.3)};
					--bd: var(--cl);
				}
			}
		}
		&-primaryAlt {
			--cl: #{color(primaryAlt)};
			&:not(.is__routeExact) {
				&:hover,
				&:focus {
					--cl: #{color(primaryAlt, 0.7)};
					--bd: #{color(primaryAlt, 0.3)};
				}
			}
		}
		&-primary {
			--cl: #{color(primary)};
			--bg: #{color(light)};
			&:not(.is__routeExact) {
				&:hover,
				&:focus {
					--cl: #{color(primary, 0.7)};
					--bd: #{color(primary, 0.3)};
				}
			}
			&:not(.is__active):not(.is__route) {
				text-shadow: 0 0 1px color(dark, 0.2);
			}
		}
		&-secondary,
		&-dark,
		&-primaryAlt {
			--bg: #{color(light)};
			&.is__active,
			&.is__route:not(.is__routeExact) {
				&:hover,
				&:focus {
					--cl: #{color(light, 0.7)};
				}
			}
			&:disabled,
			&[disabled] {
				--cl: #{color(light, 0.3)};
			}
		}
	}
	&.u__tm-primary-light {
		--cl: #{color(light)};
		--bg: #{color(primary)};
		&:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(light, 0.7)};
				--bd: #{color(light, 0.3)};
			}
		}
		&.is__active,
		&.is__route:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(primary, 0.7)};
			}
		}
		&:disabled,
		&[disabled] {
			--cl: #{color(primary, 0.3)};
		}
	}
	&.u__tm-primaryAlt-primary {
		--cl: #{color(primary)};
		--bg: #{color(primaryAlt)};
		&:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(primary, 0.7)};
				--bd: #{color(primary, 0.3)};
			}
		}
		&.is__active,
		&.is__route:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(primaryAlt, 0.7)};
			}
		}
		&:disabled,
		&[disabled] {
			--cl: #{color(primaryAlt, 0.3)};
		}
	}
	&.u__tm-danger-light {
		--cl: #{color(light)};
		--bg: #{color(danger)};
		&:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(light, 0.7)};
				--bd: #{color(light, 0.3)};
			}
		}
		&.is__active,
		&.is__route:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(danger, 0.7)};
			}
		}
		&:disabled,
		&[disabled] {
			--cl: #{color(danger, 0.3)};
		}
	}
	/// default theme
	&:not([class*="__tm"]),
	&.u__tm-secondary-light {
		--cl: #{color(light)};
		--bg: #{color(secondary)};
		&:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(light, 0.7)};
				--bd: #{color(light, 0.3)};
			}
		}
		&.is__active,
		&.is__route:not(.is__routeExact) {
			&:hover,
			&:focus {
				--cl: #{color(secondary, 0.7)};
			}
		}
		&.is__routeExact {
			--cl: #{color(dark, 0.7)};
		}
		&:disabled,
		&[disabled] {
			--cl: #{color(secondary, 0.3)};
		}
	}

	/// OVERRIDE: dejar en el final
	&.is__active,
	&.is__route,
	&.is__routeExact {
		--cl: var(--bg);
		--bd: var(--cl);
	}
	&.is__active,
	&.is__route:not(.is__routeExact) {
		&:hover,
		&:focus {
			--bd: var(--cl);
		}
	}
	&:disabled,
	&[disabled] {
		--bd: var(--cl);
	}
	&.is__routeExact,
	&.is__route,
	&.is__active,
	&:disabled,
	&[disabled] {
		--bg: transparent;
	}
}

/// default size
///
/// @group SharedStyles
[class*="x-btn"]:not(.x-btnY):not(.x-btnLink),
.x-inTxt,
select.x-inSelect {
	/// Size
	/// this is the default value
	height: var(--bts, 2.4rem);
	border-radius: var(--btr, 1rem);
	border-width: var(--btb, 2px);
}

/// capitalize
///
/// @group SharedStyles
[class*="x-btn"]:not(.x-btnY),
.x-link,
select.x-inSelect {
	&,
	> :not(.x-icon) {
		&::first-letter {
			text-transform: capitalize;
		}
	}
}

/// disabled behavior
///
/// @group SharedStyles
[class*="x-btn"]:not(.x-btnY),
.x-inTxt,
.x-link,
select.x-inSelect {
	&:disabled,
	&[disabled] {
		opacity: 0.3;
		pointer-events: none;
	}
}

/// basic styling
///
/// @group SharedStyles
[class*="x-btn"],
.x-inTxt,
.x-link,
select.x-inSelect {
	white-space: nowrap;
	color: var(--cl, transparent);
	background: var(--bg, transparent);
	border-color: var(--bd, transparent); // by default
	border-style: solid;
	text-shadow: none;
	box-sizing: border-box;
	&:not([class*="__txtSi"]) {
		/// Size
		font-size: 1em;
	}
}

/// LOOPS
@each $name, $size in $fontSizes {
	/// button & buttonToggle shared styles
	///
	/// @group SharedStyles
	[class*="x-btn"]:not(.x-btnY):not(.x-btnLink) {
		&.m__size-#{$name} {
			--btp: 0 #{$size * 0.8};
		}
	}

	/// text, select, button & buttonToggle shared styles
	///
	/// @group SharedStyles
	[class*="x-btn"]:not(.x-btnY):not(.x-btnLink),
	.x-inTxt,
	select.x-inSelect {
		&.m__size-#{$name} {
			--bts: #{$size * 2.6}; // size: height/width
			--btr: #{$size}; // border radius
			--btb: calc(2px + #{$size/18}); // border width
		}
	}
}

/// tag associated
@import "icon";
@import "inputText";
@import "inputCheckbox";
@import "inputSelect";
@import "navList";
@import "navListToggle";

/// non tag associated
@import "text";
@import "emoji";
@import "svgIcon";
@import "avatar";
@import "avatarAureo";
@import "back";
@import "box";
@import "link";
@import "button";
@import "buttonLink";
@import "buttonToggle";
@import "holder";
@import "scroll";
@import "view";
@import "navigationX";
@import "navigationY";
