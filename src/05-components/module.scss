/** @format */

/// tag associated
@import "hr";
@import "icon";
@import "inputText";
@import "inputCheckbox";
@import "inputSelect";
@import "navList";
@import "navListToggle";

/// non tag associated
@import "text";
@import "emoji";
@import "logo";
@import "avatar";
@import "avatarAureo";
@import "back";
@import "box";
@import "link";
@import "linkNav";
@import "button";
@import "buttonToggle";
@import "holder";
@import "scroll";
@import "view";
@import "navigationX";
@import "navigationY";

/// There are some components that share common styles

/// navList-group & navListToggle-group shared styles
///
/// @group SharedStyles
ul,
ol {
	&.x-nList-group,
	&.x-nListToggle-group {
		overflow: hidden;

		/// flow direction
		///
		/// @group Modifiers
		&.m__flow-row {
			@include flexbox(row, nowrap, flex-start, center);
			> li:not(:last-child) {
				margin-right: 1rem;
			}
		}
		/// default flow
		&:not([class*="m__flow"]),
		&.m__flow-column {
			@include flexbox(column, nowrap, flex-start, stretch);
			> li:not(:last-child) {
				margin-bottom: 0.5rem;
			}
		}

		> li {
			.x-link,
			.x-linkNav {
				white-space: normal;
				line-height: $lineHeightMedium;
			}
		}
	}
}

/// button & buttonToggle shared styles
///
/// @group SharedStyles
.x-btn,
.x-btnToggle {
	/// this is the default value
	&.m__size-normal,
	&:not([class*="m__size"]) {
		padding: 0 0.8rem;
		&.m__round {
			width: 2.4rem;
		}
	}

	/// round button
	///
	/// @group Modifiers
	&.m__round {
		padding: 0;
		i.x-icon {
			margin: 0 !important;
			+ span {
				display: none;
			}
		}
	}
}

/// button, buttonY & select shared styles
///
/// @group SharedStyles
.x-btn,
.x-btnY,
select.x-inSelect {
	white-space: nowrap;
	border-color: transparent;

	/// button, select theme
	/// first value is the bgColor
	/// second value is the textColor
	///
	/// @group Unions
	&.u__tm-light {
		&-secondary {
			color: color(secondary);
			&:hover,
			&:focus {
				border-color: color(secondary, 0.3);
				color: color(secondary, 0.7);
			}
		}
		&-dark {
			color: color(dark, 0.7);
			&:hover,
			&:focus {
				border-color: color(dark, 0.3);
				color: color(dark, 0.3);
			}
		}
		&-primaryAlt {
			color: color(primaryAlt);
			&:hover,
			&:focus {
				border-color: color(primaryAlt, 0.3);
				color: color(primaryAlt, 0.7);
			}
		}
		&-primary {
			color: color(primary);
			background-color: color(light);
			&:hover,
			&:focus {
				border-color: color(primary, 0.3);
				color: color(primary, 0.7);
			}
			&:not(.is__active) {
				text-shadow: 0 0 1px color(dark, 0.2);
			}
			// &.is__routeExact,
			// &.is__active {
			// 	border-color: color(light);
			// 	color: color(light);
			// }
			// &:disabled,
			// &[disabled] {
			// 	border-color: color(light, 0.3);
			// 	color: color(light, 0.3);
			// }
		}
		&-secondary,
		&-dark,
		&-primaryAlt {
			background-color: color(light);
			&.is__routeExact,
			&.is__active {
				border-color: color(light);
				color: color(light);
			}
			&:disabled,
			&[disabled] {
				border-color: color(light, 0.3);
				color: color(light, 0.3);
			}
		}
	}
	&.u__tm-primary-light {
		background-color: color(primary);
		color: color(light);
		&:hover,
		&:focus {
			border-color: color(light, 0.3);
			color: color(light, 0.7);
		}
		&.is__routeExact,
		&.is__active {
			border-color: color(primary);
			color: color(primary);
		}
		&:disabled,
		&[disabled] {
			border-color: color(primary, 0.3);
			color: color(primary, 0.3);
		}
	}
	&.u__tm-primaryAlt-primary {
		background-color: color(primaryAlt);
		color: color(primary);
		&:hover,
		&:focus {
			border-color: color(primary, 0.3);
			color: color(primary, 0.7);
		}
		&.is__routeExact,
		&.is__active {
			border-color: color(primaryAlt);
			color: color(primaryAlt);
		}
		&:disabled,
		&[disabled] {
			border-color: color(primaryAlt, 0.3);
			color: color(primaryAlt, 0.3);
		}
	}
	/// default theme
	&:not([class*="u__tm"]),
	&.u__tm-secondary-light {
		background-color: color(secondary);
		color: color(light);
		&:hover,
		&:focus {
			border-color: color(light, 0.3);
			color: color(light, 0.7);
		}
		&.is__active {
			border-color: color(secondary);
			color: color(secondary);
		}
		&.is__routeExact {
			border-color: color(dark, 0.7);
			color: color(dark, 0.7);
		}
		&:disabled,
		&[disabled] {
			border-color: color(secondary, 0.3);
			color: color(secondary, 0.3);
		}
	}

	/// OVERRIDE: dejar en el final
	&.is__routeExact,
	&.is__active,
	&:disabled,
	&[disabled] {
		background-color: transparent;
	}
}

/// text, select, button & buttonToggle shared styles
///
/// @group SharedStyles
.x-btn,
.x-btnToggle,
.x-inTxt,
select.x-inSelect {
	border-style: solid;
	text-shadow: none;
	box-sizing: border-box;
	&:not([class*="xm__txtSize"]) {
		font-size: 1rem;
	}
	/// this is the default value
	&.m__size,
	&.m__size-normal,
	&:not([class*="m__size"]) {
		height: 2.4rem;
		border-radius: 1rem;
		border-width: 2px;
	}
}

/// button, buttonToggle, link & linkNav shared styles
///
/// @group SharedStyles
.x-btn,
.x-btnToggle,
.x-link,
.x-linkNav {
	&,
	> :not(.x-icon) {
		&::first-letter {
			text-transform: capitalize;
		}
	}
	:not(.x-icon):first-child ~ i.x-icon {
		margin-left: 0.4em;
	}
	i.x-icon ~ :not(.x-icon) {
		margin-left: 0.4em;
	}
}

/// button, buttonToggle, link, linkNav & select shared styles
///
/// @group SharedStyles
.x-btn,
.x-btnToggle,
.x-link,
.x-linkNav,
.x-inTxt,
select.x-inSelect {
	&:disabled,
	&[disabled] {
		opacity: 0.3;
		pointer-events: none;
	}
}

/// LOOPS

@each $name, $size in $fontSizes {
	/// button & buttonToggle shared styles
	///
	/// @group SharedStyles
	.x-btn,
	.x-btnToggle {
		&.m__size-#{$name} {
			padding: 0 #{$size * 0.8};
			&.m__round {
				width: $size * 2.6;
			}
		}
	}
	/// text, select, button & buttonToggle shared styles
	///
	/// @group SharedStyles
	.x-btn,
	.x-btnToggle,
	.x-inTxt,
	select.x-inSelect {
		&.m__size-#{$name} {
			height: $size * 2.6;
			border-radius: $size;
			border-width: calc(2px + (#{$size} / 18));
		}
	}
}
