/** @format */

/// Main navigation
/// this element is expected to be an <nav> wrapper
///
/// @group Layouts
.x-navX {
	width: 100%;
	@include flexbox(column, nowrap, center, stretch);
	// box-sizing: border-box;

	/// es barra de navegacion principal
	///
	/// @group Statuses
	&:not(.is__sub) {
		&:not(.is__relative) {
			z-index: 16;
			@media (max-width: $viewportMd) {
				/// mobile
				&:not([class*="__tm"]),
				&.m__tm-secondary {
					&:not(.is__top) .x-navX-wrapper.is__main {
						box-shadow: 0 0.5rem 2.4rem color(dark, 0.05);
					}
					.x-navX-wrapper.is__main {
						background: color(light);
					}
					> .x-navX-wrapper {
						background: transparent;
						box-shadow: none;
					}
				}
				> .x-navX-wrapper > .x-holder {
					// first one
					position: static;
					padding: 0 !important;
				}
				.x-navX-wrapper.is__main {
					position: fixed;
					left: 0;
					top: 0;
					z-index: 16;
				}
				.x-navX-wrapper.is__search {
					z-index: -1;
					height: auto;
					position: absolute;
					top: 100%;
					left: 0;
					> *,
					> * > *,
					> * > * > * {
						width: 100%;
					}
				}
			}
			@media (min-width: $viewportMd + 1) {
				/// desktop
				> .x-navX-wrapper {
					position: fixed;
					left: 0;
					top: 0;
					z-index: 16;
					.x-navX-wrapper {
						width: auto;
						> .x-holder {
							// nested childs
							padding: 0 !important;
						}
					}
				}
			}
		}
		&,
		.x-navX-wrapper {
			height: 5rem;
			transition: all 0.3s ease-out;
		}

		/// tema de la barra de navegacion principal
		///
		/// @group ConditionalModifiers
		&.m__tm-light,
		&.m__tm-lightAlt {
			.x-navX-list-item > {
				.x-link:not(:hover):not(.is__active):not(.is__routeExact) {
					text-shadow: 1px 1px 1px color(dark, 0.3);
				}
				.x-btnLink:not(:hover):not(.is__active):not(.is__routeExact) {
					@media (min-width: $viewportMd + 1) {
						text-shadow: 1px 1px 1px color(dark, 0.3);
					}
				}
				.x-btn {
					&.is__active,
					&.is__routeExact {
						// color: color(primaryAlt);
						text-shadow: 1px 1px 1px color(dark, 0.3);
					}
				}
			}
		}
		/// default theme
		&:not([class*="__tm"]),
		&.m__tm-secondary {
			> .x-navX-wrapper {
				background: color(light);
			}
			&:not(.is__relative) > .x-navX-wrapper {
				box-shadow: 0 0.5rem 2.4rem color(dark, 0.05);
			}
			.x-navX-list-item > {
				.x-link,
				.x-btnLink {
					// color: color(secondary);
				}
			}
		}
	}

	/// es barra de navegacion secundaria
	///
	/// @group Statuses
	&.is__sub {
		position: absolute;
		left: 0;
		top: 100%;
		// margin: 0;
		height: 2.4rem;
		border-top: 2px solid transparent;
		border-bottom: 2px solid transparent;
		@media (min-width: $viewportMd + 1) {
			z-index: 14;
		}

		/// tema de la barra de navegacion secundaria
		///
		/// @group ConditionalModifiers
		&.m__tm-light .x-navX-list-item > {
			.x-link,
			.x-btnLink {
				&:not(:hover):not(.is__active):not(.is__routeExact) {
					// color: color(light);
					text-shadow: 1px 1px 1px color(dark, 0.3);
				}
			}
		}
		&.m__tm-primaryAlt .x-navX-list-item > {
			.x-link,
			.x-btnLink {
				&:hover,
				&.is__active,
				&.is__routeExact {
					// color: color(primaryAlt);
					text-shadow: 1px 1px 1px color(dark, 0.3);
				}
			}
		}
		/// default theme
		&:not([class*="__tm"]),
		&.m__tm-secondary {
			border-bottom-color: color(secondary, 0.05);
			.x-navX-list-item > {
				.x-link,
				.x-btnLink {
					// color: color(secondary);
				}
			}
		}
	}

	/// mobile menu
	///
	/// @group Statuses
	&.is__mobile {
		@media (max-width: $viewportMd) {
			position: fixed;
			left: 100%;
			top: 0;
			width: 15rem; //230px aprox
			height: 120%;
			border: none;
			transition: margin 0.3s ease-out;
			box-sizing: border-box;
			padding-top: 7.4rem;
			background: color(light);
			&:before {
				content: "";
				z-index: -1;
				display: block;
				position: absolute;
				left: 0;
				top: 0;
				width: 2.4rem;
				height: 100%;
				@include linear-gradient(
					to right,
					color(dark, 0.05),
					transparent
				);
			}
			&:after {
				content: "MenÃº";
				display: block;
				position: absolute;
				left: 0;
				top: 0;
				width: 100%;
				height: 5rem;
				padding: 0 1rem;
				color: color(dark, 0.7);
				font-weight: $fontWeightBold;
				@include flexbox(row, nowrap, flex-start, center);
			}
			> .x-navX-wrapper {
				z-index: 14;
				overflow-y: auto;
				overflow-x: hidden;
				display: block;
				.x-holder {
					padding-top: 1rem;
					padding-bottom: calc(20vh + 1rem); // overflow fix
				}
				.x-holder,
				.x-navX-list {
					height: auto;
					flex-flow: column nowrap;
					justify-content: flex-start;
					align-items: flex-start;
					> *:not(:first-child) {
						margin-left: 0;
						margin-top: 1rem;
					}
				}
			}
			.x-dropdownToggler i.x-icon {
				display: none;
			}
			.x-dropdown {
				display: block;
				position: relative;
				top: auto;
				left: auto;
				bottom: auto;
				right: auto;
				padding: 1rem 0 1.4rem;
				border-radius: 0;
				background: transparent;
				box-shadow: none;
				hr {
					display: none;
				}
				li {
					padding-left: 1rem;
					&:not(:last-child) {
						// margin-bottom: 1rem;
						--gap-y: 1rem;
					}
					a,
					p {
						padding: 0;
						white-space: normal;
					}
				}
			}
		}
	}
}

/// Navigation wrapper
.x-navX-wrapper {
	&,
	> .x-holder {
		width: 100%;
		height: 100%;
		position: static;
		@include flexbox(row, nowrap, space-between, center);
	}
	> *:not(:first-child) {
		@media (min-width: $viewportMd + 1) {
			margin-left: 1rem;
		}
	}
}

/// Navigation nav list
/// this element is expected to be an <ul> or <ol> list
ul.x-navX-list,
ol.x-navX-list {
	position: static;
	@include flexbox(row, nowrap, center, center);
	&,
	> * {
		&:not(:first-child) {
			margin-left: 1rem;
		}
	}
	&.is__toggle {
		@media (min-width: $viewportMd + 1) {
			display: none;
		}
	}
	&.is__aside {
		@media (max-width: $viewportMd) {
			position: fixed;
			left: 100%;
			top: 5rem;
			margin-left: 0;
			padding-left: 1rem;
			transition: margin 0.3s ease-out;
		}
	}
}

/// Navigation nav list item
/// this element is expected to be an <li> list item
li.x-navX-list-item {
	@include flexbox(column, nowrap, center, flex-start);
}
