/** @format */
/*
	General styling, layout agnostig classes and rules
*/

::selection {
	background: color(secondary);
	color: color(light);
}
::-moz-selection {
	background: color(secondary);
	color: color(light);
}

// ::-webkit-input-placeholder{
// 	color: color(secondary);
// }
// ::-moz-placeholder{
// 	color: color(secondary);
// }
// :-ms-input-placeholder{
// 	color: color(secondary);
// }
// :-moz-placeholder{
// 	color: color(secondary);
// }

// &::-webkit-scrollbar{
// 	width: 13px;
// 	background-color: color(dark);
// }
// &::-webkit-scrollbar-track{
// 	-webkit-box-shadow: none;
// }
// &::-webkit-scrollbar-thumb{
// 	background-color: color(secondary);
// 	border-style: solid;
// 	border-width: 0 3px;
// 	border-color:color(dark);
// 	&:hover{
// 		background-color: color(primary);
// 	}
// }

* {
	margin: 0;
	padding: 0;
	border: 0;
	position: relative;
	font-family: inherit;
	font-size: 1em;
	line-height: $lineHeight;
	@include appearance(none);
	&:before,
	&:after {
		// line-height: 1.2em;
		@include box-sizing(inherit);
	}
	&:active,
	&:focus,
	&:hover {
		outline: 0;
	}
}

html {
	font-size: 100%;
}

img {
	display: block;
	overflow: hidden;
	color: color(light);
	&:before {
		content: "\f7a9";
		font-family: font(awesome);
		font-weight: 900;
		color: color(danger);
		font-size: $fontSizeHuge;
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		padding: 1rem;
		@include box-sizing(border-box);
		@include flexbox(column, nowrap, center, center);
	}
	&:not(.m__bgColor-none) {
		@include linear-gradient(135deg, #d4d4d4 0, #00b6ff 500%);
	}
}

code {
	font-family: font(code);
}

svg {
	width: inherit;
	height: inherit;
	[_fill] {
		fill: none;
		stroke: none;
	}
}

textarea {
	resize: vertical;
}

p {
	/* These are technically the same, but use both */
	overflow-wrap: break-word;
	word-wrap: break-word;
	-ms-word-break: break-all;
	/* This is the dangerous one in WebKit, as it breaks things wherever */
	// word-break: break-all;
	/* Instead use this non-standard one: */
	word-break: break-word;

	/* Adds a hyphen where the word breaks, if supported (No Blink) */
	-ms-hyphens: auto;
	-moz-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;
	a {
		white-space: normal !important;
	}
}

small {
	font-size: 0.7em;
}

a {
	text-decoration: none;
}

i:not(.x-icon) {
	font-style: italic;
}

ul,
ol {
	list-style: none;
}

a,
button,
label,
select {
	&,
	* {
		vertical-align: middle;
	}
	&:not(:disabled):hover {
		cursor: pointer;
	}
	&.is__routeExact {
		pointer-events: none;
	}
}

h1,
h2,
h3,
h4,
h5,
h6 {
	// font-family: font(second);
	a {
		white-space: normal !important;
	}
}

/// global font weight
:not(a):not(b):not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(button):not(strong):not(label[class*="x-button"]):not([class*="fa-"]):not([class*="xm__textWeight"]) {
	font-weight: inherit;
}

a,
b,
h1,
h2,
h3,
h4,
h5,
h6,
button,
strong,
.x-button,
.x-buttonToggle {
	&:not([class*="xm__textWeight"]) {
		font-weight: $fontWeightBold;
	}
}

.xm__textWeight-bold {
	font-weight: $fontWeightBold;
}

html,
.xm__textWeight-regular {
	font-weight: $fontWeightRegular;
}
