@use "sass:math";

// grid Gap
// both dimension
//
// @group GlobalModifiers
// gap using margin
// both axis
// this class applies to any container, not just flex containers, so it can't be polyfilled
//
// @group GlobalModifiers
.--gap {
	// flex, column & grid only
	&,
	&-15 {
		@include extend-viewports-classes(false, $viewports) {
			gap: 1rem;
		}
	}
	&-none {
		@include extend-viewports-classes(false, $viewports) {
			gap: 0;
		}
	}
}
.--gapX {
	// flex, column & grid only, X axis
	&,
	&-15 {
		@include extend-viewports-classes(false, $viewports) {
			column-gap: 1rem;
		}
	}
	&-none {
		@include extend-viewports-classes(false, $viewports) {
			column-gap: 0;
		}
	}
}
.--gapY {
	// flex, column & grid only, Y axis
	&,
	&-15 {
		@include extend-viewports-classes(false, $viewports) {
			row-gap: 1rem;
		}
	}
	&-none {
		@include extend-viewports-classes(false, $viewports) {
			row-gap: 0;
		}
	}
}

.--gaping {
	&,
	&-15 {
		@include extend-viewports-classes(false, $viewports) {
			> *:not(:last-child) {
				margin-bottom: 1rem;
				margin-bottom: 1rem;
			}
		}
	}
}
.--gapingX {
	// X dimension
	&,
	&-15 {
		@include extend-viewports-classes(false, $viewports) {
			> *:not(:last-child) {
				margin-right: 1rem;
			}
		}
	}
}
.--gapingY {
	// Y dimension
	&,
	&-15 {
		@include extend-viewports-classes(false, $viewports) {
			> *:not(:last-child) {
				margin-bottom: 1rem;
			}
		}
	}
}

@for $i from 1 through 10 {
	// grid Gap, future flex gap
	.--gap-#{$i*5} {
		// flex, column & grid only
		@include extend-viewports-classes(false, $viewports) {
			gap: #{math.div($i, 3)}rem;
		}
	}
	.--gapX-#{$i*5} {
		// flex, column & grid only, X axis
		@include extend-viewports-classes(false, $viewports) {
			column-gap: #{math.div($i, 3)}rem;
		}
	}
	.--gapY-#{$i*5} {
		// flex, column & grid only, Y axis
		@include extend-viewports-classes(false, $viewports) {
			row-gap: #{math.div($i, 3)}rem;
		}
	}

	// Gaping
	// Fallback for gap on non supporting browsers
	.--gaping-#{$i*5} {
		@include extend-viewports-classes(false, $viewports) {
			margin: 0 -#{math.div($i, 3)}rem -#{math.div($i, 3)}rem 0;
			> * {
				margin: 0 #{math.div($i, 3)}rem #{math.div($i, 3)}rem 0;
			}
		}
	}
	.--gapingX-#{$i*5} {
		@include extend-viewports-classes(false, $viewports) {
			> *:not(:last-child) {
				margin-right: #{math.div($i, 3)}rem;
			}
		}
	}
	.--gapingY-#{$i*5} {
		@include extend-viewports-classes(false, $viewports) {
			> *:not(:last-child) {
				margin-bottom: #{math.div($i, 3)}rem;
			}
		}
	}
}
