//
// inicia GLOBAL UNIONS
//

/// # Global unions
/// Condense most common modifiers of rules that require multiple parameters
///
/// **.xu__globalUnionName-firstValue-SecondValue{}**
/// ```css
///  .xu__flxAlign-center-stretch{}
/// ```
/// As any other union but work in any element
/// If both values are equal the could be merged
/// ```css
///  /** Long version */
///  .xu__flxAlign-center-center{}
///
///  /** Short version */
///  .xu__flxAlign-center{}
/// ```
///
/// @group unions
/// @example njk
///  <div class="x-flx m__flxColumn">
///   TODO: union example
///  </div>

// flexbox shortcuts: Set justify-content & align-items
//  Justify Space between...
//
// @group GlobalUnions
.xu__flx-between {
	&,
	&-stretch,
	&-baseline,
	&-start,
	&-center,
	&-end {
		@include extend-viewports-classes {
			&:not([class*="-grd"]):not([class*="__flxSelf"]) {
				justify-content: space-between;
			}
			&.x-grd {
				justify-items: space-between;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				justify-self: space-between;
			}
		}
	}
}

//  Justify space around...
//
// @group GlobalUnions
.xu__flx-around {
	&,
	&-stretch,
	&-baseline,
	&-start,
	&-center,
	&-end {
		@include extend-viewports-classes {
			&:not([class*="-grd"]):not([class*="__flxSelf"]) {
				justify-content: space-around;
			}
			&.x-grd {
				justify-items: space-around;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				justify-self: space-around;
			}
		}
	}
}

//  Justify space evenly...
//
// @group GlobalUnions
.xu__flx-evenly {
	&,
	&-stretch,
	&-baseline,
	&-start,
	&-center,
	&-end {
		@include extend-viewports-classes {
			&:not([class*="-grd"]):not([class*="__flxSelf"]) {
				justify-content: space-evenly;
			}
			&.x-grd {
				justify-items: space-evenly;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				justify-self: space-evenly;
			}
		}
	}
}

// Justify center...
//
// @group GlobalUnions
.xu__flx-center {
	&,
	&-stretch,
	&-baseline,
	&-start,
	&-center,
	&-end {
		@include extend-viewports-classes {
			&:not([class*="-grd"]):not([class*="__flxSelf"]) {
				justify-content: center;
			}
			&.x-grd {
				justify-items: center;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				justify-self: center;
			}
		}
	}
}

.xu__flx-between,
.xu__flx-around,
.xu__flx-evenly,
.xu__flx-center {
	// default
	@include extend-viewports-classes {
		&:not([class*="__flxSelf"]) {
			align-items: center;
		}
		&.x-grd > .xm__flxSelf,
		&.xm__flxSelf {
			align-self: center;
		}
	}
}

//  Justify flex start...
//
// @group GlobalUnions
.xu__flx-start {
	// default
	@include extend-viewports-classes {
		&:not([class*="__flxSelf"]) {
			align-items: flex-start;
		}
		&.x-grd > .xm__flxSelf,
		&.xm__flxSelf {
			align-self: flex-start;
		}
	}

	&,
	&-stretch,
	&-baseline,
	&-start,
	&-center,
	&-end {
		@include extend-viewports-classes {
			&:not([class*="-grd"]):not([class*="__flxSelf"]) {
				justify-content: flex-start;
			}
			&.x-grd {
				justify-items: flex-start;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				justify-self: flex-start;
			}
		}
	}
}

// Justify flex-end...
//
// @group GlobalUnions
.xu__flx-end {
	// default
	@include extend-viewports-classes {
		&:not([class*="__flxSelf"]) {
			align-items: flex-end;
		}
		&.x-grd > .xm__flxSelf,
		&.xm__flxSelf {
			align-self: flex-end;
		}
	}

	&,
	&-stretch,
	&-baseline,
	&-start,
	&-center,
	&-end {
		@include extend-viewports-classes {
			&:not([class*="-grd"]):not([class*="__flxSelf"]) {
				justify-content: flex-end;
			}
			&.x-grd {
				justify-items: flex-end;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				justify-self: flex-end;
			}
		}
	}
}
.xu__flx-start,
.xu__flx-center,
.xu__flx-end,
.xu__flx-between,
.xu__flx-around,
.xu__flx-evenly {
	&-start {
		@include extend-viewports-classes {
			&:not([class*="__flxSelf"]) {
				align-items: flex-start;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				align-self: flex-start;
			}
		}
	}
	&-center {
		@include extend-viewports-classes {
			&:not([class*="__flxSelf"]) {
				align-items: center;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				align-self: center;
			}
		}
	}
	&-end {
		@include extend-viewports-classes {
			&:not([class*="__flxSelf"]) {
				align-items: flex-end;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				align-self: flex-end;
			}
		}
	}
	&-stretch {
		@include extend-viewports-classes {
			&:not([class*="__flxSelf"]) {
				align-items: stretch;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				align-self: stretch;
			}
		}
	}
	&-baseline {
		@include extend-viewports-classes {
			&:not([class*="__flxSelf"]) {
				align-items: baseline;
			}
			&.x-grd > .xm__flxSelf,
			&.xm__flxSelf {
				align-self: baseline;
			}
		}
	}
}
