@use "sass:meta";

// Default link element
// this element is expected to be an <a> tag
//
// @group Components
.link {
	// display: inline-block;
	--bg: transparent;
	&.is--alert:after {
		--bc: var(--cl-h, var(--cl-a));
		background-color: var(--cl, var(--bg));
	}
	&.is--active,
	&.is--routeExact:not(.no--route):not(.no--routeExact) {
		color: var(--cl-a);
	}

	// hover status
	&.toggle--dropdown.is--active {
		color: var(--cl-h, var(--cl-a));
	}
	&:not(.is--active) {
		&:not(.is--routeExact),
		&.is--routeExact.no--route,
		&.is--routeExact.no--routeExact {
			&:hover {
				color: var(--cl-h, var(--cl-a));
			}
		}
	}

	// shadow
	&.--shadow {
		&:hover,
		&.is--active,
		&.is--routeExact:not(.no--route):not(.no--routeExact) {
			text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
		}
	}

	// link theme
	//
	// @group Modifiers
	@function linkThemeSelector($name) {
		@return ".--tm-#{$name}";
	}
	@include extend-map-modifiers(
			$themeColors,
			meta.get-function("linkThemeSelector"),
			secondary,
			':not([class*="-tm-"])'
		)
		using($name, $value) {
		--cl: #{color($name)};
		--cl-a: #{color($name, 0.7)};
		--cl-h: #{color($name, 0.5)};
		&.is--alert:after {
			--cl-h: #{color(light, 0.5)};
		}
	}
	.--tm-light {
		--cl: #{color(light)};
		--cl-a: #{color(primary)};
	}
	.--tm-lightComplement {
		--cl: #{color(light)};
		--cl-a: #{color(primaryComplement)};
	}

	// link round handling
	&.--round {
		@include extend-viewports-classes(true, $viewports) {
			i.icon,
			.svg {
				&:last-child {
					display: none;
				}
			}
		}
	}
}

// desktop only, use hover
@media (min-width: ($viewportMd + 1)) {
	// hover status
	*:hover > .toggle--dropdown:not(.only--active).link {
		color: var(--cl-h, var(--cl-a));
		// link shadow
		&.--shadow {
			text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
		}
	}
}

// mobile only, use focus
@media (max-width: $viewportMd) {
	// focus status
	*:focus-within:not(.no--focus) > .toggle--dropdown:not(.only--active).link {
		color: var(--cl-h, var(--cl-a));
		// link shadow
		&.--shadow {
			text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
		}
	}
}
