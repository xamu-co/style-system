// Default link element
// this element is expected to be an <a> tag
//
// @group Components
.x-link {
	// display: inline-block;
	--bg: transparent;
	&.is__alert:after {
		--bc: var(--cl-h, var(--cl-a));
		background-color: var(--cl, var(--bg));
	}
	&.is__active,
	&.is__routeExact {
		color: var(--cl-a);
	}

	// link theme
	//
	// @group Modifiers
	&.m__tm {
		&-light {
			--cl: #{color(light)};
			--cl-a: #{color(primary)};
		}
		&-lightAlt {
			--cl: #{color(light)};
			--cl-a: #{color(primaryAlt)};
		}
		&-primaryAlt {
			--cl: #{color(primaryAlt)};
			--cl-a: #{color(light)};
			--sh: #{color(primaryAlt, 0.7)};
		}
		&-danger {
			--cl: #{color(danger)};
			--cl-a: #{color(danger, 0.7)};
			--cl-h: #{color(dark, 0.5)};
			&.is__alert:after {
				--cl-h: #{color(light, 0.5)};
			}
		}
	}
	// default theme: secondary
	&:not([class*="__tm"]),
	&.m__tm-secondary {
		--cl: #{color(secondary)};
		--cl-a: #{color(dark, 0.7)};
		--cl-h: #{color(dark, 0.5)};
		&.is__alert:after {
			--cl-h: #{color(light, 0.5)};
		}
	}

	// link round handling
	&.m__round {
		@include extend-viewports-classes(true, $viewports) {
			i.x-icon,
			.x-svg {
				&:last-child {
					display: none;
				}
			}
		}
	}
}

// hover status
.toggle__dropdown.is__active.x-link,
.toggle__dropdown.is__active > .x-link,
.x-link:hover:not(.is__active):not(.is__routeExact) {
	color: var(--cl-h, var(--cl-a));
}

// link shadow
.toggle__dropdown.is__active.x-link.m__shadow,
.toggle__dropdown.is__active > .x-link.m__shadow,
.x-link.m__shadow:hover,
.x-link.m__shadow.is__active,
.x-link.m__shadow.is__routeExact {
	text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
}

// desktop only, use hover
@media (min-width: $viewportMd + 1) {
	// hover status
	*:hover > .toggle__dropdown.x-link,
	*:hover > .toggle__dropdown > .x-link {
		color: var(--cl-h, var(--cl-a));
	}

	// link shadow
	*:hover > .toggle__dropdown.x-link.m__shadow,
	*:hover > .toggle__dropdown > .x-link.m__shadow {
		text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
	}
}

// mobile only, use focus
@media (max-width: $viewportMd) {
	// focus status
	*:focus-within:not(.no__focus) > .toggle__dropdown.x-link,
	*:focus-within:not(.no__focus) > .toggle__dropdown > .x-link {
		color: var(--cl-h, var(--cl-a));
	}

	// link shadow
	*:focus-within:not(.no__focus) > .toggle__dropdown.x-link.m__shadow,
	*:focus-within:not(.no__focus) > .toggle__dropdown > .x-link.m__shadow {
		text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
	}
}
