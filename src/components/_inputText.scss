// Envuelve cada vista
// this element is expected to be an <input> or <textarea> tag but the text type
//
// @group Components
:not(textarea).x-inTxt {
	i.x-icon,
	.x-svg {
		position: absolute;
		top: 50%;
		left: 0.8rem;
		z-index: 1;
		transform: translateY(-50%);
	}
	input {
		background-color: transparent;
		width: 100%;
		height: 100%;
		padding-left: 1.6rem;
		color: inherit;
		font-weight: inherit;
		box-sizing: border-box;
	}
}
textarea.x-inTxt {
	height: auto !important;
	min-height: 6rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.x-inTxt {
	width: 100%;
	display: block;
	padding: 0 0.8rem;
	@include flexbox(column, nowrap, center, center);

	&:not([class*="__txtA"]) {
		--ta: left;
	}

	// theme
	//
	// @group Modifiers
	&:not(.is__invalid) {
		&.m__tm {
			&-light {
				--bg: #{color(light, 0.3)};
				--bc: #{color(light, 0.7)};
				--cl: #{color(light)};
				--cl-a: #{color(light, 0.7)};
				text-shadow: 1px 1px 1px color(dark, 0.3);
				&:hover:not(:focus):not(:focus-within) {
					--bc: var(--cl);
				}
				&:focus,
				&:focus-within {
					--bg: #{color(primary, 0.3)};
					--bc: #{color(primary)};
				}
			}
			&-lighter {
				--bg: #{color(light)};
				--bc: #{transparent};
				--cl: #{color(primary)};
				--cl-a: #{color(primary, 0.5)};
				// showcase a shadow
				//
				// @group ConditionalModifiers
				&.m__shadow {
					box-shadow: 1px 1px 3px color(dark, 0.3);
				}
			}
			&-lightAlt {
				--bg: #{color(light)};
				--bc: #{transparent};
				--cl: #{color(primaryAlt)};
				--cl-a: #{color(primaryAlt, 0.3)};
				// showcase a shadow
				//
				// @group ConditionalModifiers
				&.m__shadow {
					box-shadow: 1px 1px 3px color(dark, 0.3);
				}
			}
			&-primary {
				--bg: #{color(primary, 0.1)};
				--bc: #{color(primary, 0.05)};
				--cl: #{color(light)};
				--cl-a: #{color(light, 0.5)};
			}
		}

		// default theme
		&:not([class*="__tm"]),
		&.m__tm-secondary {
			--bg: #{color(secondary, 0.1)};
			--bc: #{color(secondary, 0.05)};
			--cl: #{color(secondary)};
			--cl-a: #{color(secondary, 0.3)};
		}
	}

	// invalid
	// TODO: invalid state for danger theme
	&.is__invalid,
	&.m__tm-danger {
		--bg: #{color(danger, 0.1)};
		--bc: #{color(danger, 0.05)};
		--cl: #{color(danger)};
		--cl-a: #{color(danger, 0.3)};
	}

	// OVERRIDES:
	&:hover:not(:focus):not(:focus-within) {
		--bc: var(--cl-a) !important;
	}
	&:focus,
	&:focus-within {
		--bc: var(--cl) !important;
	}

	&::placeholder,
	input::placeholder,
	input:placeholder-shown ~ i.x-icon,
	input:placeholder-shown ~ .x-svg path {
		color: var(--cl-a);
		fill: var(--cl-a);
	}
}
