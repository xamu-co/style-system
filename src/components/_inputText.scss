@use "sass:meta";

// Envuelve cada vista
// this element is expected to be an <input> or <textarea> tag but the text type
//
// @group Components
:not(textarea).iTxt {
	i.icon,
	.svg {
		position: absolute;
		top: 50%;
		left: 0.8rem;
		z-index: 1;
		transform: translateY(-50%);
	}
	input {
		background-color: transparent;
		width: 100%;
		height: 100%;
		padding-left: 1.6rem;
		color: inherit;
		font-weight: inherit;
		box-sizing: border-box;
		&[placeholder],
		&:placeholder-shown {
			text-overflow: ellipsis;
		}
	}
}
textarea.iTxt {
	min-height: 6rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.iTxt {
	width: 100%;
	display: block;
	padding: 0 0.8rem;
	@include flexbox(column, nowrap, center, center);

	&:not([class*="-txtA"]) {
		text-align: left;
	}

	// theme
	//
	// @group Modifiers
	@function iTxtThemeSelector($name) {
		@return ".--tm-#{$name}";
	}
	@include extend-map-modifiers(
			$themeColors,
			meta.get-function("iTxtThemeSelector"),
			secondary,
			':not([class*="-tm-"])'
		)
		using($name, $value) {
		--bg: #{color($name, 0.1)};
		--bc: #{color($name, 0.05)};
		--cl: #{color(light)};
		--cl-a: #{color(light, 0.5)};

		// invalid
		&.is--invalid {
			--bg: #{color(danger, 0.1)};
			--bc: #{color(danger, 0.05)};
			--cl: #{color(danger)};
			--cl-a: #{color(danger, 0.3)};
		}
	}

	// Aditional colors
	&.--tm-light {
		--bg: #{color(light, 0.3)};
		--bc: #{color(light, 0.7)};
		--cl: #{color(light)};
		--cl-a: #{color(light, 0.7)};
		text-shadow: 1px 1px 1px color(dark, 0.3);
		&:hover:not(:focus):not(:focus-within) {
			--bc: var(--cl);
		}
		&:focus,
		&:focus-within {
			--bg: #{color(primary, 0.3)};
			--bc: #{color(primary)};
		}
	}
	&.--tm-lighter {
		--bg: #{color(light)};
		--bc: #{transparent};
		--cl: #{color(primary)};
		--cl-a: #{color(primary, 0.5)};
	}
	&.--tm-lightComplement {
		--bg: #{color(light)};
		--bc: #{transparent};
		--cl: #{color(primaryComplement)};
		--cl-a: #{color(primaryComplement, 0.3)};
	}
	&.--tm-light,
	&.--tm-lighter,
	&.--tm-lightComplement {
		// invalid
		&.is--invalid {
			--bg: #{color(danger, 0.1)};
			--bc: #{color(danger, 0.05)};
			--cl: #{color(danger)};
			--cl-a: #{color(danger, 0.3)};
		}

		// showcase a shadow
		//
		// @group ConditionalModifiers
		&.--shadow {
			box-shadow: 1px 1px 3px color(dark, 0.3);
		}
	}

	// OVERRIDES:
	&:hover:not(:focus):not(:focus-within) {
		--bc: var(--cl-a) !important;
	}
	&:focus,
	&:focus-within {
		--bc: var(--cl) !important;
	}

	&::placeholder,
	input::placeholder,
	input:placeholder-shown ~ i.icon,
	input:placeholder-shown ~ .svg path {
		color: var(--cl-a);
		fill: var(--cl-a);
	}
}
