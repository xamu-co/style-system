@use "../utils/module" as utils;
@use "sass:meta";

@function hrThemeSelector($name) {
	@return ".#{utils.$prefix__default}--tm-#{$name}";
}

// Delimiter
//
// @group Components
@mixin hr {
	hr {
		opacity: 0.2;
		background-repeat: round;
		background-position: 50% 50%;
		flex: 0 0 auto;
		display: block;

		height: 2px;
		width: 100%;
		&:not([class*="--m"]) {
			width: calc(100% + 1rem);
			margin: 0 -0.5rem;
		}
		&:last-child:not(:nth-child(2)):not(:only-child) {
			display: none;
		}

		// Tema del delimitador
		//
		// @group Modifiers
		@include utils.extend-color-modifiers(
				meta.get-function("hrThemeSelector")
			)
			using($name, $value, $isDefault) {
			background-image: url("#{utils.$ruleSvgPathX}#{str-replace(#{$value}, '#')}#{utils.$ruleSvgPathEnd}");
		}

		&.#{utils.$prefix__default}--vertical {
			@include utils.extend-viewports-classes {
				// max-width: 2px;
				width: 2px;
				height: 100%;
				&:not([class*="--m"]) {
					height: calc(100% + 1rem);
					margin: -0.5rem 0;
				}

				// Tema del delimitador
				//
				// @group Modifiers
				@include utils.extend-color-modifiers(
						meta.get-function("hrThemeSelector")
					)
					using($name, $value, $isDefault) {
					background-image: url("#{utils.$ruleSvgPathY}#{str-replace(#{$value}, '#')}#{utils.$ruleSvgPathEnd}");
				}
			}
		}
	}
}
