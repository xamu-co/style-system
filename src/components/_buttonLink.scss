@use "sass:meta";

// link Navigation element
//
// @group Components
.bttnLink {
	@media (max-width: $viewportSm) {
		width: 2.4rem;
		span {
			display: none;
		}
	}
	@media (max-width: $viewportMd) {
		// tablet
		// Size
		// this is the default value
		height: 2.4rem;
		border-radius: 1rem;
		border-width: 2px;
		padding: 0 0.8rem;
		width: auto;
		&:disabled,
		&[disabled]:not([disabled="false"]) {
			opacity: 1;
		}
		@media (min-width: ($viewportSm + 1)) {
			&:not(.is--active) {
				&:not(.is--route),
				&.is--route.no--route {
					// icon only
					width: 2.4rem;
					padding: 0;
					span {
						display: none;
					}
				}
			}
			&.is--active,
			&.is--route:not(.no--route) {
				// text only
				i.icon,
				.svg {
					display: none;
				}
			}

			i.icon,
			.svg {
				&:first-child {
					display: none;
				}
			}
		}

		@each $name, $size in $fontSizes {
			&.--size-#{$name} {
				height: $size * 2.6;
				border-radius: $size;
				border-width: calc(2px + (#{$size} / 18));
				padding: 0 #{$size * 0.8};
				@media (min-width: ($viewportSm + 1)) {
					&:not(.is--active) {
						&:not(.is--route),
						&.is--route.no--route {
							// icon only
							width: $size * 2.6;
						}
					}
				}
			}
		}
	}

	@media (min-width: ($viewportMd + 1)) {
		// desktop
		--cl: var(--rw) !important;
		--bg: transparent !important;

		// ruta activa
		//
		// @group Statuses
		&.is--route:not(.no--route):before {
			content: "...";
			display: block;
			position: absolute;
			top: calc(100%);
			left: 0;
			line-height: 0;
			overflow: visible;
			font-size: 1.3em;
		}

		// nav link themes
		//
		// @group Modifiers
		@function buttonLinkThemeSelector($name) {
			@return ".--tm-#{$name}-light";
		}
		@include extend-map-modifiers(
				$extendedThemeColors,
				meta.get-function("buttonLinkThemeSelector"),
				secondary,
				':not([class*="-tm-"])'
			)
			using($name, $value) {
			--rw: #{color($name)};
			&:not(.is--active) {
				&:not(.is--routeExact),
				&.is--routeExact.no--route,
				&.is--routeExact.no--routeExact {
					&:hover {
						--rw: #{color($name, 0.5)};
					}
				}
			}
			&.is--active,
			&.is--routeExact:not(.no--route):not(.no--routeExact) {
				--rw: #{color($name, 0.7)};
			}
		}

		// Alternative themes
		@function buttonLinkThemeSelectorLight($name) {
			@return ".--tm-light-#{$name}";
		}
		@include extend-map-modifiers(
				$extendedThemeColors,
				meta.get-function("buttonLinkThemeSelectorLight")
			)
			using($name, $value) {
			--rw: #{color(light)};
			&:hover,
			&.is--active,
			&.is--routeExact:not(.no--route):not(.no--routeExact) {
				--rw: #{color($name)};
			}
		}

		i.icon,
		.svg {
			&:last-child {
				display: none;
			}
		}
	}
}
