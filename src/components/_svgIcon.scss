@use "sass:meta";

// svg icon
//
// @group Components

a,
label,
button {
	&:not(.bttnToggle) {
		&:hover,
		&.is--active,
		&.is--routeExact:not(.no--route):not(.no--routeExact) {
			.svg {
				--cl: var(--cl-a, $textColor);
				&.is--logo {
					--cl: var(--cl-l, #{color(primary)});
				}
			}
		}
	}
}

.svg {
	&,
	svg {
		@include flexbox(row, nowrap, center, center, inline-flex);
	}
	[fill]:not([fill="none"]) {
		fill: var(--cl, #{color(secondary)});
	}
	&:hover,
	&.is--active,
	&.is--routeExact:not(.no--route):not(.no--routeExact) {
		--cl: var(--cl-a, $textColor);
		&.is--logo {
			--cl: var(--cl-l, #{color(primary)});
		}
	}

	// logo theme
	//
	// @group Modifiers
	@function svgThemeSelector($name) {
		@return ".--tm-#{$name}";
	}
	@include extend-map-modifiers(
			$themeColors,
			meta.get-function("svgThemeSelector")
		)
		using($name, $value) {
		--cl: #{$value};
		--cl-a: #{color(light)};
	}
	&.--tm-light {
		--cl: #{color(light)};
		--cl-a: #{color(primary)};
		--cl-l: #{color(secondary)};
	}
	&.--tm-lightComplement {
		--cl: #{color(light)};
		--cl-a: #{color(primaryComplement)};
		--cl-l: #{color(secondary)};
	}
	&.--tm-light,
	&.--tm-lightComplement {
		filter: drop-shadow(1px 1px 1px color(dark, 0.3));
	}

	[fill="none"] {
		display: none;
	}
}
