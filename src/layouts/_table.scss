@use "sass:meta";
@use "sass:math";

// Table
// tbl instead of table to not crash with other libraries such as bootstrap
table.tbl {
	table-layout: fixed;
	border-collapse: collapse;
	box-sizing: border-box;
	border-spacing: 0;
	&:not([class*="-txtA"]) {
		// Align
		tr {
			th,
			td {
				&:not([class*="-txtA"]) {
					text-align: left;
				}
			}
		}
	}
	&:not([class*="-txtCo"]) {
		// Color
		color: $textColor;
	}
	thead {
		z-index: 3;
		tr {
			th,
			td {
				&.is--selected {
					font-weight: weight(bold);
				}
				*:not(i.icon) {
					font-weight: inherit;
				}
			}
		}
	}
	thead,
	tbody {
		width: 100%;
		tr {
			border-bottom: 2px solid transparent;
			transition: all 0.1s ease-out;
			th,
			td {
				padding: 0.5rem 1rem;
				transition: color 0.1s ease-out;
				font-weight: weight();
				&:before {
					content: "";
					display: block;
					width: 100%;
					height: 100%;
					position: absolute;
					top: 0;
					left: 0;
					z-index: 0;
					pointer-events: none;
					transition: all 0.1s ease-out;
					border-top: 2px solid transparent;
					border-bottom: 2px solid transparent;
					box-sizing: border-box;
				}
				&:first-child:before {
					border-top-left-radius: 0.7rem;
					border-bottom-left-radius: 0.7rem;
					border-left: 2px solid transparent;
				}
				&:last-child {
					&:before,
					&.--sticky:before {
						border-top-right-radius: 0.7rem;
						border-bottom-right-radius: 0.7rem;
						border-right: 2px solid transparent;
					}
				}
				&.--sticky {
					position: sticky;
					z-index: 2;
					background: color(light);
					left: 0;
					width: 0%; // fit width to content
					&:hover {
						z-index: 3;
					}
					&:empty {
						padding: 0.5rem 0.35rem;
						pointer-events: none;
					}
					&:last-child {
						right: 0;
					}
				}
			}
			td {
				min-width: math.div($minColumnSize, 3);
			}
		}
	}

	// table theme
	//
	// @group Modifiers
	@function tableThemeSelector($name) {
		@return ".--tm-#{$name}";
	}
	@include extend-map-modifiers(
			$themeColors,
			meta.get-function("tableThemeSelector"),
			secondary,
			':not([class*="-tm-"])'
		)
		using($name, $value) {
		thead {
			tr {
				color: color($name, 0.6);
				&:hover {
					th:before,
					td:before {
						border-color: color($name, 0.05);
					}
				}
				th,
				td {
					&.is--selected {
						color: $value;
					}
					&:before {
						background: color($name, 0.1);
					}
				}
			}
		}
		tbody {
			tr {
				&.is--selected {
					&:hover {
						th:before,
						td:before {
							border-color: color($name, 0.3);
						}
					}
					th:before,
					td:before {
						border-color: color($name, 0.1);
					}
				}
				&:hover,
				&.is--selected {
					color: $value;
					th:before,
					td:before {
						background: color($name, 0.1);
					}
				}
			}
		}
	}

	@media (max-width: $viewportMd) {
		// TODO: fix this
		&.--collapseOnMobile {
			&,
			thead,
			tbody,
			th,
			td,
			tr {
				display: block;
			}
			thead {
				position: absolute;
				top: -9999px;
				left: -9999px;
			}
			tbody {
				th,
				td {
					/* Behave  like a "row" */
					// border: none;
					// border-bottom: 1px solid #eee;
					// position: relative;
					// padding-left: 50%;
					@include flexbox(row, nowrap, flex-start, center);
					&[data-column]:before {
						content: attr(data-column);
					}
					&:before {
						/* Now like a table header */
						content: "Column";
						width: 30%;
						// position: absolute;
						// /* Top/left values mimic padding */
						// top: 6px;
						// left: 6px;
						// width: 45%;
						flex: 0 0 auto;
						height: 100%;
						padding-right: 1rem;
						white-space: pre-line;
						overflow: hidden;
						text-overflow: ellipsis;
						@include flexbox(row, nowrap, flex-start, center);
					}
				}
				td {
				}
			}
		}
	}
}
