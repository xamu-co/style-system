/// # Flexbox layout
/// Flexbox layout system
/// ```css
///  .flx
///
///  /** or inline */
///  .flxInline
/// ```
/// This layout makes use of the global flx union
///
/// ## Requirements:
/// None
///
/// ## Modifiers:
/// ### Row flex flow
/// Row direction and wrapping behavior.
/// ```css
///  .flx.--flxRow
///
///  /** it can be reversed */
///  .flx.--flxRowReverse
///
///  /** or allow content wrapping */
///  .flx.--flxRow-wrap
///  .flx.--flxRowReverse-wrap
/// ```
/// ### Column flex flow
/// Column direction and wrapping behavior.
/// ```css
///  .flx.--flxColumn
///
///  /** it can be reversed */
///  .flx.--flxColumnReverse
///
///  /** or allow content wrapping */
///  .flx.--flxColumn-wrap
///  .flx.--flxColumnReverse-wrap
/// ```
///
/// ## Unions:
/// None
///
/// @group layout-flex
/// @example njk
///  <div class="flx --flxColumn">
///   TODO: flexbox example
///  </div>

// flex container
.flx {
	@include extend-device-interactions {
		display: flex;
	}
}

// flex inline container
.txt > .flx,
.flxInline {
	@include extend-device-interactions {
		display: inline-flex;
		position: static; // why? (27/03/2021)
	}
}

// flexbox container
.flx,
.flxInline {
	@include extend-device-interactions {
		&:not([class*="-gap"]) {
			// this already matches .--gaping classes
			gap: 1rem;
		}
	}
	// flexbox row container
	//
	// @group Modifiers
	&.--flxRow {
		&,
		&-wrap,
		&-reverse,
		&-nowrap {
			@include extend-viewports-classes(true, $viewports) {
				flex-direction: row;
			}
		}
	}
	&.--flxRowReverse {
		&,
		&-wrap,
		&-reverse,
		&-nowrap {
			@include extend-viewports-classes(true, $viewports) {
				flex-direction: row-reverse;
			}
		}
	}

	// flexbox flex container
	//
	// @group Modifiers
	&.--flxColumn {
		&,
		&-wrap,
		&-reverse,
		&-nowrap {
			@include extend-viewports-classes(true, $viewports) {
				flex-direction: column;
			}
		}
	}
	&.--flxColumnReverse {
		&,
		&-wrap,
		&-reverse,
		&-nowrap {
			@include extend-viewports-classes(true, $viewports) {
				flex-direction: column-reverse;
			}
		}
	}

	// an union could be a shorter solution, but is a huge breaking change
	&.--flxRow,
	&.--flxColumn,
	&.--flxRowReverse,
	&.--flxColumnReverse {
		&-wrap {
			@include extend-viewports-classes(true, $viewports) {
				flex-wrap: wrap;
			}
		}
		&-reverse {
			@include extend-viewports-classes(true, $viewports) {
				flex-wrap: wrap-reverse;
			}
		}
		// default
		&,
		&-nowrap {
			@include extend-viewports-classes(true, $viewports) {
				flex-wrap: nowrap;
			}
		}
	}
}
