/// # Dropdown layout
/// Multipurpose dropdown
/// ```css
///  .dropdown
/// ```
///
/// ## Requirements:
///
/// ### Toggle
/// It requires a toggler as previous sibling element to trigger the opening
/// ```css
///  .toggle--dropdown
/// ```
/// Or with action components:
/// ```html
///  <div class="flx --flxColumn --flx-center --pY-100">
///   <x-link toggle="dropdown">trigger</x-link>
///   <ul class="dropdown flx --flxColumn --flx-start --gapingY-5">
///    <li>
///     <a href="#" class="link">aguacate</a>
///    </li>
///    <li>
///     <a href="#" class="link">cereza</a>
///    </li>
///    <li>
///     <a href="#" class="link">platano</a>
///    </li>
///   </ul>
///  </div>
/// ```
/// If an icon is provided this will rotate accordignly.
/// It is recomended that this points to the oposite direction where the dropdown is located.
/// ```html
///  <div class="flx --flxColumn --flx-center --pY-100">
///   <a href="#" class="toggle--dropdown link">
///    <span>trigger</span>
///    <i class="icon fa-chevron-up fas"></i>
///   </a>
///   <ul class="dropdown flx --flxColumn --flx-start --gapingY-5">
///    <li>
///     <a href="#" class="link">aguacate</a>
///    </li>
///    <li>
///     <a href="#" class="link">cereza</a>
///    </li>
///    <li>
///     <a href="#" class="link">platano</a>
///    </li>
///   </ul>
///  </div>
/// ```
///
/// ## Modifiers:
/// None
///
/// ## Unions:
/// ### Position
/// This component can be aligned at almost any position, the default being bottom-left.
/// The second value is optional and fallbacks to center.
/// ```css
///  .dropdown.--position-bottom-left
/// ```
///
/// @group layout-dropdown
/// @example njk
///  {% extends "dropdown.njk" %}

@mixin toggleStyles {
	&:not(.bttnToggle) >,
	> :not(.bttnToggle) > {
		i.icon,
		.svg {
			&:last-child {
				transform: rotate(180deg);
			}
			&.is--toggleIndicator ~ :last-child {
				// prevent tranform is toggle indicator is defined
				transform: none;
			}
		}
	}
	i.icon,
	.svg {
		&.is--toggleIndicator {
			transform: rotate(180deg);
		}
	}
	+ .dropdown {
		display: block;
		&.flx {
			display: flex;
		}
		&.flxInline {
			display: inline-flex;
		}
		&.grd {
			display: grid;
		}
		&.grdInline {
			display: inline-grid;
		}
	}
}

.toggle--dropdown {
	&.is--active,
	&:not(.only--active):hover {
		@include toggleStyles;
	}
}
// hover devices only any size (mostly desktop)
// use hover
@media (hover: hover) {
	*:hover > .toggle--dropdown:not(.only--active),
	.toggle--dropdown:not(.only--active):hover:not(.no--hover) {
		@include toggleStyles;
	}
}
// tablet with no hover only (tablets & mobile devices)
// use focus & .is--active class
@media (max-width: $viewportMd) and (hover: none) {
	.toggle--dropdown:not(.only--active):focus-within:not(.no--focus) {
		@include toggleStyles;
	}
}

.dropdown {
	z-index: 10;
	position: absolute;
	&,
	&.flx,
	&.grd {
		display: none;
	}
	&:before {
		content: "";
		position: absolute;
		display: block;
		width: 100%;
		height: 100%;
	}
	&:not(.has--items),
	&-item {
		background: color(light);
		box-shadow: 3px 3px 9px color(dark, 0.3);
		&:not([class*="-txtSi"]) {
			font-size: size(sm);
		}
		&.--size-lg {
			padding: 1rem 1.333rem;
			border-radius: 1.667rem;
		}
		&:not([class*="--size"]),
		&.--size,
		&.--size-md {
			padding: 0.7rem 1rem;
			border-radius: 1.333rem;
		}
		&.--size-sm {
			padding: 0.5rem 0.7rem;
			border-radius: 0.5rem;
		}
	}

	// Position
	//
	// @group Modifiers
	// Right
	&.--position-right {
		&,
		&-top,
		&-center,
		&-bottom {
			@include extend-viewports-classes {
				left: calc(100% + 0.5rem);
				&:before {
					left: -0.5rem;
					top: 0;
				}
			}
		}
	}
	// Left
	&.--position-left {
		&,
		&-top,
		&-center,
		&-bottom {
			@include extend-viewports-classes {
				right: calc(100% + 0.5rem);
				&:before {
					right: -0.5rem;
					top: 0;
				}
			}
		}
	}
	// Right & Left
	&.--position-right,
	&.--position-left {
		&-center {
			@include extend-viewports-classes {
				top: 50%;
				transform: translateY(-50%);
			}
		}
		&-bottom {
			@include extend-viewports-classes {
				bottom: -1rem;
			}
		}
		// Default right position
		&,
		&-top {
			@include extend-viewports-classes {
				top: -1rem;
			}
		}
	}
	// Top
	&.--position-top {
		&,
		&-left,
		&-right,
		&-center {
			@include extend-viewports-classes {
				bottom: calc(100% + 0.5rem);
				&:before {
					left: 0;
					bottom: -0.5rem;
				}
			}
		}
	}
	// Bottom
	&.--position-bottom {
		&,
		&-left,
		&-right,
		&-center {
			@include extend-viewports-classes {
				top: calc(100% + 0.5rem);
				&:before {
					right: 0;
					top: -0.5rem;
				}
			}
		}
	}
	// Top & Bottom
	&.--position-top,
	&.--position-bottom {
		&-right {
			@include extend-viewports-classes {
				right: -0.7rem;
			}
		}
		&-center {
			@include extend-viewports-classes {
				left: 50%;
				transform: translateX(-50%);
			}
		}
		// Default bottom position
		&,
		&-left {
			@include extend-viewports-classes {
				left: -0.7rem;
			}
		}
	}
	// default: bottom-left
	&:not([class*="-po"]) {
		// Position
		left: -0.7rem;
		top: calc(100% + 0.5rem);
		&:before {
			right: 0;
			top: -0.5rem;
		}
	}

	li {
		&:not(:first-child) {
			padding-top: 0.2rem;
		}
		&:not(:last-child) {
			padding-bottom: 0.2rem;
		}
	}
}
