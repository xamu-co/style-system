// Main navigation
// this element is expected to be an <nav> wrapper
//
// @name Columns
// @group Layouts

.navX {
	width: 100%;
	@include flexbox(column, nowrap, center, stretch);
	// box-sizing: border-box;

	// es barra de navegacion principal
	//
	// @group Statuses
	&:not(.is--sub) {
		&:not(.is--relative) {
			z-index: 16;
		}
		&,
		.navX-wrapper {
			height: 5rem;
			transition: all 0.3s ease-out, padding 0s;
		}

		// tema de la barra de navegacion principal
		//
		// @group ConditionalModifiers
		&[class*="-tm-light"] {
			.navX-list-item {
				> *,
				> * > * {
					&.link:not(:hover):not(.is--active):not(.is--routeExact)[class*="-tm-light"] {
						text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
					}
					&.bttnLink {
						&:not(:hover):not(.is--active):not(.is--routeExact) {
							@media (min-width: ($viewportMd + 1)) {
								text-shadow: 1px 1px 1px
									var(--sh, #{color(dark, 0.3)});
							}
						}
					}
					&.bttn {
						&.is--active,
						&.is--routeExact {
							text-shadow: 1px 1px 1px
								var(--sh, #{color(dark, 0.3)});
						}
					}
				}
				> .toggle--dropdown.is--active {
					&,
					> * {
						&.link:not(:hover):not(.is--active):not(.is--routeExact)[class*="-tm-light"] {
							text-shadow: none;
						}
						&.bttnLink {
							&:not(:hover):not(.is--active):not(.is--routeExact) {
								@media (min-width: ($viewportMd + 1)) {
									text-shadow: none;
								}
							}
						}
						&.bttn {
							&.is--active,
							&.is--routeExact {
								text-shadow: none;
							}
						}
					}
				}
				// desktop only, use hover
				@media (min-width: ($viewportMd + 1)) {
					&:hover > .toggle--dropdown:not(.only--active) {
						&,
						> * {
							&.link:not(:hover):not(.is--active):not(.is--routeExact)[class*="-tm-light"] {
								text-shadow: none;
							}
							&.bttnLink {
								&:not(:hover):not(.is--active):not(.is--routeExact) {
									text-shadow: none;
								}
							}
							&.bttn {
								&.is--active,
								&.is--routeExact {
									text-shadow: none;
								}
							}
						}
					}
				}
				// mobile only, use focus
				@media (max-width: $viewportMd) {
					&:focus-within:not(.no--focus)
						> .toggle--dropdown:not(.only--active) {
						&,
						> * {
							&.link:not(:hover):not(.is--active):not(.is--routeExact)[class*="-tm-light"] {
								text-shadow: none;
							}
							&.bttn {
								&.is--active,
								&.is--routeExact {
									text-shadow: none;
								}
							}
						}
					}
				}
			}
		}
		&.--tm-lightAlt {
			--sh: #{color(primaryAlt, 0.7)};
		}
		// default theme
		&:not([class*="-tm"]),
		&.--tm-secondary {
			> .navX-wrapper {
				background: color(light);
			}
			&:not(.is--relative) > .navX-wrapper {
				box-shadow: 0 0.5rem 2.4rem color(dark, 0.05);
			}
		}
	}

	// es barra de navegacion secundaria
	//
	// @group Statuses
	&.is--sub {
		position: absolute;
		left: 0;
		top: 100%;
		// margin: 0;
		height: 2.4rem;
		border-top: 2px solid transparent;
		border-bottom: 2px solid transparent;

		// tema de la barra de navegacion secundaria
		//
		// @group ConditionalModifiers
		&.--tm-light .navX-list-item {
			> *,
			> * > * {
				&.link,
				&.bttnLink {
					&:not(:hover):not(.is--active):not(.is--routeExact) {
						text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
					}
				}
			}
			> .toggle--dropdown.is--active {
				&,
				> * {
					&.link,
					&.bttnLink {
						text-shadow: none;
					}
				}
			}
			// desktop only, use hover
			@media (min-width: ($viewportMd + 1)) {
				&:hover > .toggle--dropdown:not(.only--active) {
					&,
					> * {
						&.link,
						&.bttnLink {
							text-shadow: none;
						}
					}
				}
			}
			// mobile only, use focus
			@media (max-width: $viewportMd) {
				&:focus-within:not(.no--focus)
					> .toggle--dropdown:not(.only--active) {
					&,
					> * {
						&.link,
						&.bttnLink {
							text-shadow: none;
						}
					}
				}
			}
		}
		&.--tm-primaryAlt .navX-list-item {
			> *,
			> * > * {
				&.link,
				&.bttnLink {
					&:hover,
					&.is--active,
					&.is--routeExact {
						text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
					}
				}
			}
			> .toggle--dropdown.is--active {
				&,
				> * {
					&.link,
					&.bttnLink {
						text-shadow: 1px 1px 1px var(--sh, #{color(dark, 0.3)});
					}
				}
			}
			// desktop only, use hover
			@media (min-width: ($viewportMd + 1)) {
				&:hover > .toggle--dropdown:not(.only--active) {
					&,
					> * {
						&.link,
						&.bttnLink {
							text-shadow: 1px 1px 1px
								var(--sh, #{color(dark, 0.3)});
						}
					}
				}
			}
			// mobile only, use focus
			@media (max-width: $viewportMd) {
				&:focus-within:not(.no--focus)
					> .toggle--dropdown:not(.only--active) {
					&,
					> * {
						&.link,
						&.bttnLink {
							text-shadow: 1px 1px 1px
								var(--sh, #{color(dark, 0.3)});
						}
					}
				}
			}
		}
		// default theme
		&:not([class*="-tm"]),
		&.--tm-secondary {
			border-bottom-color: color(secondary, 0.05);
		}
	}
}

// Navigation wrapper
.navX-wrapper {
	&,
	> .holder {
		width: 100%;
		height: 100%;
		position: static;
		@include flexbox(row, nowrap, space-between, center);
	}
}

// Navigation nav list
// this element is expected to be an <ul> or <ol> list
ul.navX-list,
ol.navX-list {
	position: static;
	@include flexbox(row, nowrap, center, center);
	&,
	> * {
		&:not(:first-child) {
			margin-left: 1rem;
			@media (max-width: $viewportSm) {
				margin-left: 0.5rem;
			}
		}
	}
}

// Navigation nav list item
// this element is expected to be an <li> list item
li.navX-list-item {
	@include flexbox(column, nowrap, center, flex-start);
}
